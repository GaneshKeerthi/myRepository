Q1: Reltime usage of triggers
Have used Triggers to generate primary key values to a column
When invoked, they help in generating values automatically

Q2: Wrapper classes and their usage in real-time
=> provide utility methods to work on the corresponding type of data
=> mainly used in collections framework and other java API
=> useful in validating the data before converion

Q3: Difference between StringBuffer and StringBuilder
StringBuffer is thread-safe whereas StringBuilder is thread unsafe
Hence StringBuilder is preferred in terms of efficiency wrt execution time

Q4: Difference between List and Set in Collection Framework
List
=> duplicates and dissimilar objects are accepted
=> two-way iteration possible
=> not sorted
Set
=> doesn't accept duplicate values
=> one way iteration
=> SortedSet sub-interface implemented by TreeSet to give a sorted collection

Q5: Difference between checked and unchecked exceptions
Checked Exception
=> whenever the implementing methods need to be informed aboout the possible exceptions we define a checked exception
=> IOException, SQLException, UserDefinedExceptions extending Exception etc
Unchecked Exception
=> whenever the implementing methods need not be informed aboout the possible exceptions we define an unchecked exception
=> ArithmaticException, NumberFormatException, UserDefinedExceptions extending RuntimeException etc

Q6: Difference between Statement, PreparedStatement and CallableStatement
Statement: used to communicate using regular SQL queries wherein values are constant
PraparedStatement: used to communicate using regular SQL queries wherein values aren't constant
Callable: used to call stored procedures

Q6.1. Difference between JQuery and JS
JS is used to create dynamic and interative front-end
JQuery is based on JS
JQury makes the code shorter and have practically used it once to format html tables

Q6.2. Difference between Let and var in JS
Both used to declare variable in JS
var => function scope
let => block scope

Q6.3. Difference between ID Selector and Class Selector
Both used in CSS
id => # to style a particular element
class => . to style a element repeated multiple times (cab be used as a template)

Q6.4. Difference between Procedure and Functions
Similar purpose
Function can return a value, whereas procedure can just execute

Q8 Use of generics
=> used to determine the data-types being accepted or compatible to members of a class
=> wild characters help in mentionging the upper and lower bound types to which the data can be casted

Q9. Java-7 & 8 Features methods and classes?
=> New date and time related packages
=> introduction of concrete methods in interfaces
=> spring API
=> pre-defined functional interfaces

Q10. Need of State Management
Values need to be managed across pages or elements in UI
Famous tools and command methods: Flutter Redux etc

Q11. JSP and JSTL
JSP. we need to write the implementation explicitly
JSTL. they come with inbuilt implemetation

Q12. MVC Representational
View related to frontend
Module: includes the pojo and business logic classes
Controller: A controller class or API like Servlets

Q13. Module Qualifier in MVC
Helps to resolve ambiguity in case if we have similar type of dependencies

Q14. Cost and Shared-in time configuration

Q15. HTML 5 and 6
HTML 5: supports additional attributes in meta info like script, link etc
HTML 6: predicted to come-up with features like wrapper tags, auto resizing of images and higher security

Q16. Some selectors in CSS
p, headers like h1, h2.., body, img

Q17.JSP file as controller?
No (as view)

Q18. Spring popularity
Compatability
Annotations support
High level of abstravtion achieved through the beans generated by factory config

Q19. IOC container:
generates the necessary dependencies required by an application
Generates based on the factory pattern
Spring BeanFactory referes to the configuration specified in the xml file and genrates the dependencies

The necessary values are also injected into the beans based on specified values

Q20. Bean Scopes
Stand-alone application:
=> If we create a stand-alone appliation that runs locally
=> and then add a ClassPathXML app context in mainApp class of the source code
behaves as a Spring stand-alone application

Singleton (default)
Prototype

Web::
Request - New bean per request
Session - New bean per session
Global Session - New bean per global http session

Notes from Tata Elxsi Chennai Pune Branch in 2025